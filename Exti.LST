C51 COMPILER V9.52.0.0   EXTI                                                              04/09/2016 13:05:48 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE EXTI
OBJECT MODULE PLACED IN Exti.OBJ
COMPILER INVOKED BY: F:\Keil\C51\BIN\C51.EXE Exti.c LARGE BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          
   2          /*------------------------------------------------------------------*/
   3          /* --- STC MCU International Limited -------------------------------*/
   4          /* --- STC 1T Series MCU RC Demo -----------------------------------*/
   5          /* --- Mobile: (86)13922805190 -------------------------------------*/
   6          /* --- Fax: 86-0513-55012956,55012947,55012969 ---------------------*/
   7          /* --- Tel: 86-0513-55012928,55012929,55012966 ---------------------*/
   8          /* --- Web: www.GXWMCU.com -----------------------------------------*/
   9          /* --- QQ:  800003751 ----------------------------------------------*/
  10          /* If you want to use the program or the program referenced in the  */
  11          /* article, please specify in which data and procedures from STC    */
  12          /*------------------------------------------------------------------*/
  13          
  14          
  15          /*************  功能说明  **************
  16          
  17          本文件为STC15xxx系列的外中断初始化和中断程序,用户可以在这个文件中修改自己需要的中断程序.
  18          
  19          ******************************************/
  20          
  21          
  22          #include  "config.h"
  23          
  24          extern u8 time_counter;//timer0 计数
  25          extern u8 line_counter;//黑线 计数
  26          extern u8 time_counter1;//timer1 计数
  27          extern bit update_flag;//timer1 计时标记
  28          extern bit tl_flag;
  29          extern bit over_flag; //
  30          
  31          /********************* INT0中断函数 *************************/
  32          void Ext_INT0 (void) interrupt INT0_VECTOR    //进中断时已经清除标志
  33          {
  34   1      //  P00 = ~P00;
  35   1        u16 temp=65536UL - (MAIN_Fosc / 40UL);
  36   1        line_counter++;                         //黑线计数加1
  37   1        if(line_counter==1 && over_flag!=1)//第一次压线且非超车模式
  38   1        tl_flag=1;//左转标志位置1
  39   1        else
  40   1        tl_flag=0;
  41   1        TR0=0;
  42   1        TH0 = (u8)(temp>> 8);
  43   1        TL0 = (u8)temp;
  44   1        TR0=1;                                  //打开定时器0
  45   1      }
  46          
  47          /********************* INT1中断函数 *************************/
  48          void Ext_INT1 (void) interrupt INT1_VECTOR    //进中断时已经清除标志
  49          {
  50   1      //  P01 = ~P01;
  51   1      }
  52          
  53          /********************* INT2中断函数 *************************/
  54          void Ext_INT2 (void) interrupt INT2_VECTOR  //
  55          {
C51 COMPILER V9.52.0.0   EXTI                                                              04/09/2016 13:05:48 PAGE 2   

  56   1      //  P02 = ~P02;
  57   1      }
  58          
  59          /********************* INT3中断函数 *************************/
  60          void Ext_INT3 (void) interrupt INT3_VECTOR
  61          {
  62   1      //  P03 = ~P03;
  63   1      }
  64          
  65          /********************* INT4中断函数 *************************/
  66          void Ext_INT4 (void) interrupt INT4_VECTOR
  67          {
  68   1      //  P04 = ~P04;
  69   1      }
  70          
  71          //========================================================================
  72          // 函数: u8 Ext_Inilize(u8 EXT, EXTI_InitTypeDef *INTx)
  73          // 描述: 外部中断初始化程序.
  74          // 参数: INTx: 结构参数,请参考Exti.h里的定义.
  75          // 返回: 成功返回0, 空操作返回1,错误返回2.
  76          // 版本: V1.0, 2012-10-22
  77          //========================================================================
  78          u8  Ext_Inilize(u8 EXT, EXTI_InitTypeDef *INTx)
  79          {
  80   1        if(EXT >  EXT_INT4) return 1; //空操作
  81   1        
  82   1        if(EXT == EXT_INT0) //外中断0
  83   1        {
  84   2          if(INTx->EXTI_Interrupt == ENABLE)    EX0 = 1;  //允许中断
  85   2          else                  EX0 = 0;  //禁止中断
  86   2          if(INTx->EXTI_Polity == PolityHigh)   PX0 = 1;  //高优先级中断
  87   2          else                  PX0 = 0;  //低优先级中断
  88   2          if(INTx->EXTI_Mode == EXT_MODE_Fall)  IT0 = 1;  //下降沿中断
  89   2          else                  IT0 = 0;  //上升,下降沿中断
  90   2          return  0;    //成功
  91   2        }
  92   1      
  93   1        if(EXT == EXT_INT1) //外中断1
  94   1        {
  95   2          if(INTx->EXTI_Interrupt == ENABLE)    EX1 = 1;  //允许中断
  96   2          else                  EX1 = 0;  //禁止中断
  97   2          if(INTx->EXTI_Polity == PolityHigh)   PX1 = 1;  //高优先级中断
  98   2          else                  PX1 = 0;  //低优先级中断
  99   2          if(INTx->EXTI_Mode == EXT_MODE_Fall)  IT1 = 1;  //下降沿中断
 100   2          else                  IT1 = 0;  //上升,下降沿中断
 101   2          return  0;    //成功
 102   2        }
 103   1      
 104   1        if(EXT == EXT_INT2)   //外中断2, 固定为下降沿低优先级中断
 105   1        {
 106   2          if(INTx->EXTI_Interrupt == ENABLE)  INT_CLKO |=  (1 << 4);  //允许中断  
 107   2          else                INT_CLKO &= ~(1 << 4);  //禁止中断
 108   2          return  0;    //成功
 109   2        }
 110   1      
 111   1        if(EXT == EXT_INT3)   //外中断3, 固定为下降沿低优先级中断
 112   1        {
 113   2          if(INTx->EXTI_Interrupt == ENABLE)  INT_CLKO |=  (1 << 5);  //允许中断  
 114   2          else                INT_CLKO &= ~(1 << 5);  //禁止中断
 115   2          return  0;    //成功
 116   2        }
 117   1      
C51 COMPILER V9.52.0.0   EXTI                                                              04/09/2016 13:05:48 PAGE 3   

 118   1        if(EXT == EXT_INT4)   //外中断4, 固定为下降沿低优先级中断
 119   1        {
 120   2          if(INTx->EXTI_Interrupt == ENABLE)  INT_CLKO |=  (1 << 6);  //允许中断  
 121   2          else                INT_CLKO &= ~(1 << 6);  //禁止中断
 122   2          return  0;    //成功
 123   2        }
 124   1        return 2; //失败
 125   1      }
 126          void  EXTI_config(void)
 127          {
 128   1        EXTI_InitTypeDef  EXTI_InitStructure;         //结构定义
 129   1      
 130   1        EXTI_InitStructure.EXTI_Mode      = EXT_MODE_Fall;  //中断模式,   EXT_MODE_RiseFall, EXT_MODE_Fall
 131   1        EXTI_InitStructure.EXTI_Polity    = PolityHigh;     //中断优先级,   PolityLow,PolityHigh
 132   1        EXTI_InitStructure.EXTI_Interrupt = ENABLE;       //中断允许,     ENABLE或DISABLE
 133   1        Ext_Inilize(EXT_INT0,&EXTI_InitStructure);        //初始化INT0  EXT_INT0,EXT_INT1,EXT_INT2,EXT_INT3,EXT_INT4
 134   1      
 135   1      //  EXTI_InitStructure.EXTI_Mode      = EXT_MODE_Fall;  //中断模式,   EXT_MODE_RiseFall, EXT_MODE_Fall
 136   1      //  EXTI_InitStructure.EXTI_Polity    = PolityLow;      //中断优先级,   PolityLow,PolityHigh
 137   1      //  EXTI_InitStructure.EXTI_Interrupt = ENABLE;       //中断允许,     ENABLE或DISABLE
 138   1      //  Ext_Inilize(EXT_INT1,&EXTI_InitStructure);        //初始化INT1  EXT_INT0,EXT_INT1,EXT_INT2,EXT_INT3,EXT_INT4
 139   1      
 140   1      //  Ext_Inilize(EXT_INT2,&EXTI_InitStructure);        //初始化INT2  EXT_INT0,EXT_INT1,EXT_INT2,EXT_INT3,EXT_INT4
 141   1      //  Ext_Inilize(EXT_INT3,&EXTI_InitStructure);        //初始化INT3  EXT_INT0,EXT_INT1,EXT_INT2,EXT_INT3,EXT_INT4
 142   1      //  Ext_Inilize(EXT_INT4,&EXTI_InitStructure);        //初始化INT4  EXT_INT0,EXT_INT1,EXT_INT2,EXT_INT3,EXT_INT4
 143   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    272    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
